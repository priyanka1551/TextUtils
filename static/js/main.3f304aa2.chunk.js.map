{"version":3,"sources":["Home.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","enteredText","document","getElementById","react_default","a","createElement","Fragment","className","style","color","mode","placeholder","id","onInput","innerText","value","backgroundColor","height","htmlFor","type","onClick","textEntered","toLowerCase","toUpperCase","select","navigator","clipboard","writeText","innerHTML","Navbar","concat","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","role","toggleMode","App","_useState","useState","_useState2","Object","slicedToArray","setMode","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3f304aa2.chunk.js","sourcesContent":["import React from 'react';\r\nexport default function Home(props) {\r\n    var enteredText = document.getElementById('text');\r\n    function callFunction() {\r\n        document.getElementById('preview').innerText = enteredText.value;\r\n        // document.getElementById('countWords').innerHTML=`<p>{enteredText.value === \"\" ? 0 : (enteredText.value.split(/\\s+/).length)}Words and {enteredText.value.length} Characters</p>`;\r\n    }\r\n    function lowerButton() {\r\n        var enteredText = document.getElementById('text');\r\n        var textEntered = enteredText.value;\r\n        enteredText.value = textEntered.toLowerCase();\r\n    }\r\n    function upperButton() {\r\n        var enteredText = document.getElementById('text');\r\n        var textEntered = enteredText.value;\r\n        enteredText.value = textEntered.toUpperCase();\r\n    }\r\n    function copyButton() {\r\n        var enteredText = document.getElementById('text');\r\n        var textEntered = enteredText.value;\r\n        enteredText.select();\r\n        navigator.clipboard.writeText(textEntered);\r\n\r\n    }\r\n    function clearButton() {\r\n        var enteredText = document.getElementById('text');\r\n        enteredText.value = \" \";\r\n        document.getElementById('preview').innerHTML = \" \";\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\" style={{ color: (props.mode === 'light') ? 'black' : 'white' }}>\r\n                <h2>TextUtils- Word Counter, Character Counter</h2>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"form-floating\">\r\n                    <textarea className=\"form-control  \" placeholder=\"Leave a comment here\" id=\"text\" onInput={callFunction} style={{ backgroundColor: (props.mode === 'light') ? 'white' : 'rgb(4 4 4)', color: (props.mode === 'light') ? 'black' : 'white', height: \"300px\" }}></textarea>\r\n                    <label htmlFor=\"text\"></label>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-4\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={lowerButton}>Convert to Lowercase</button>\r\n                <button type=\"button\" className=\"btn btn-primary me-2\" onClick={upperButton}>Convert to Uppercase</button>\r\n                <button type=\"button\" className=\"btn btn-primary me-2\" onClick={copyButton}>Copy Text</button>\r\n                <button type=\"button\" className=\"btn btn-primary me-2\" onClick={clearButton}>Clear Text</button>\r\n            </div>\r\n\r\n            <div className=\"container\" style={{ color: (props.mode === 'light') ? 'black' : 'white' }}>\r\n                <h2> Preview here......</h2>\r\n                <div id=\"preview\"></div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n    // const [mode,setMode]=useState({\r\n\r\n    //     color:'black',\r\n    //     backgroundColor:'white'\r\n    // })\r\n    // const modeFunction=()=>{\r\n    //     setmodeDark('light');\r\n    //     if(mode.color === 'white'){\r\n    //         setMode({ \r\n    //             color:'white',\r\n    //         backgroundColor:'black'})\r\n    //     }\r\n    //     else{\r\n    //         setMode({ \r\n    //             color:'black',\r\n    //         backgroundColor:'white'})\r\n    //     }\r\n    // }\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid \">\r\n                    <a className=\"navbar-brand \" href=\"#\">TextUtils</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active \" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">About</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Features</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"form-check form-switch\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"  onClick={props.toggleMode} />\r\n                        <label className={`form-check-label text-${(props.mode==='light')?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable {(props.mode==='light')?'dark':'light'} mode</label>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n","import './App.css';\nimport Home from './Home';\nimport Navbar from './Navbar';\nimport React, { useState } from 'react';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n// import Features from './Features';\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#6c757d';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n     <Navbar mode={mode} toggleMode={toggleMode} />\n     <Home mode={mode} />\n      {/* <Router>\n        <Navbar mode={mode} toggleMode={toggleMode} />\n        <div className=\"conatiner my-3\"> */}\n          {/* <Switch> */}\n            {/* <Route exact path=\"/\"> */}\n              {/* <Home mode={mode} /> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/features\">\n              <Features />\n            </Route> */}\n          {/* </Switch> */}\n        {/* </div> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}